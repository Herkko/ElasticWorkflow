# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#	
#  $.ajax({
#      url: "/models",
#      type: "POST"
#  });
#

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

OPTIONS /*url                          controllers.Application.options(url: String)

# Home page
GET     /                   						controllers.Application.index

#Operations on models
GET		/models										controllers.Models.list
GET		/models/:id									controllers.Models.read(id: Int)
POST   	/models										controllers.Models.create
PUT    	/models/id=:id&name=:name					controllers.Models.update(id: Int, name: String)
#DELETE	/models/:id 								//TODO method not done yet

#Operations on processes
POST   	/models/:id/processes				    	controllers.Processes.create(id: Int)
PUT		/processes/id=:id&name=:name				controllers.Processes.update(id: Int, name: String)
DELETE 	/processes/:id								controllers.Processes.delete(id: Int)

#Operations on relations 
POST   	/models/:id/relations/start=:start&end=:end&value=:value						controllers.Relations.create(id: Int, start: Int, end: Int, value: String)
PUT		/relations/id=:id&start=:start&end=:end&value=:value 							controllers.Relations.update(id: Int, start: Int, end: Int, value: String)
DELETE 	/relations/:id																	controllers.Relations.delete(id: Int)

#Operation on elements //TODO setting/updating size param missing
POST	/models/:id/processes/:pId/elements/elemType=:elemType&value=:value&x=:x&y=:y	controllers.ProcessElements.create(id: Int, pId: Int, elemType: Int, value: String, x: Int, y: Int)
PUT    	/elements/id=:id&value=:value&size=:size&x=:x&y=:y								controllers.ProcessElements.update(id: Int, value: String, size: Int, x: Int, y: Int)

#JSON methods
GET   	/element									controllers.JsonController.list	
GET   	/start									    controllers.JsonController.getStart	
GET   	/start/:id									controllers.JsonController.getStartByModel(id: Int)	
PUT     /start/:id									controllers.JsonController.toElement(id: Int)
GET   	/end										controllers.JsonController.getEnd
GET   	/end/:id									controllers.JsonController.getEndByModel(id: Int)	
PUT     /end/:id									controllers.JsonController.toElement(id: Int)
GET   	/swimlane									controllers.JsonController.getSwimlane	
GET   	/swimlane/:id								controllers.JsonController.getSwimlaneByModel(id: Int)	
GET   	/activity									controllers.JsonController.getActivity	
PUT     /activity/:id								controllers.JsonController.toElement(id: Int)
POST    /activity/:id								controllers.JsonController.createElement(id: Int)
GET		/activity/:id								controllers.JsonController.getActivityByRelationId(id: Int)
GET   	/gateway									controllers.JsonController.getGateway	
GET   	/gateway/:id							    controllers.JsonController.getGatewayByModel(id: Int)
PUT     /gateway/:id								controllers.JsonController.toElement(id: Int)	
GET   	/relation									controllers.JsonController.getRelation	
GET   	/relation/:id								controllers.JsonController.getRelationByModel(id: Int)	

#Pages which show javascript
GET		/edit										controllers.Application.showEditPage									

#Random to be cleaned up (currently just akka tryouts)
GET     /live										controllers.ActorUpdates.live
GET     /say/:said								    controllers.ActorUpdates.say(said: String)
GET     /update/:id/:value							controllers.ActorUpdates.update(id: Int, value: String)
GET	 	/room										controllers.ActorUpdates.room
#PUT   	/element/:id/:name							controllers.ActorUpdates.update(id: Int, name: String)
GET     /xml/:id									controllers.XMLcontroller.modelToXML(id: Int)
		
#Removing slash from the end of URL
GET  	/*path  									controllers.Application.removeSlash(path: String)





